version: '3.9'

networks:
  agent-network:
    driver: bridge

volumes:
  duckdb_data:
    driver: local
  ollama_data:
    driver: local

services:
  # API Gateway / Orchestration Service
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: agent-api
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      - PYTHONPATH=/app
      - DEPLOYMENT_PROFILE=${DEPLOYMENT_PROFILE:-lightweight}
      - ASR_SERVICE_URL=${ASR_SERVICE_URL:-http://asr:8001}
      - LLM_SERVICE_URL=${LLM_SERVICE_URL:-http://llm:8002}
      - TTS_SERVICE_URL=${TTS_SERVICE_URL:-http://tts:8003}
      - SARDAUKAR_TRANSLATOR_URL=${SARDAUKAR_TRANSLATOR_URL:-http://sardaukar-translator:8004}
      - SARDAUKAR_ENABLED=${SARDAUKAR_ENABLED:-false}
    volumes:
      - duckdb_data:/app/data
      - ./api:/app
    depends_on:
      - asr
      - llm
      - tts
      - sardaukar-translator
    networks:
      - agent-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: ${HEALTH_CHECK_START_PERIOD:-40s}

  # Automatic Speech Recognition Service
  asr:
    build:
      context: ./asr
      dockerfile: Dockerfile
    container_name: agent-asr
    ports:
      - "${ASR_PORT:-8001}:8001"
    environment:
      - PYTHONPATH=/app
      - WHISPER_MODEL=${WHISPER_MODEL:-base}
    volumes:
      - ./asr:/app
    networks:
      - agent-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: ${HEALTH_CHECK_START_PERIOD:-40s}

  # Ollama Service (Containerized LLM Backend) - Only used when OLLAMA_MODE != disabled
  ollama:
    image: ollama/ollama:latest
    container_name: agent-ollama
    ports:
      - "${OLLAMA_PORT:-11434}:11434"
    environment:
      - OLLAMA_HOST=0.0.0.0
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - agent-network
    restart: unless-stopped
    profiles:
      - ollama
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: 60s

  # Large Language Model Service
  llm:
    build:
      context: ./llm
      dockerfile: Dockerfile
    container_name: agent-llm
    ports:
      - "${LLM_PORT:-8002}:8002"
    environment:
      - PYTHONPATH=/app
      - MODEL_NAME=${LLM_MODEL_NAME:-phi3:mini}
      - MODEL_PATH=/app/models
      - OLLAMA_HOST=${OLLAMA_HOST:-http://ollama:11434}
      - OLLAMA_MODE=${OLLAMA_MODE:-container}
      - LLM_PROVIDER=${LLM_PROVIDER:-ollama}
      - LLM_API_KEY=${LLM_API_KEY:-}
      - LLM_BASE_URL=${LLM_BASE_URL:-}
    volumes:
      - ./llm:/app
      - ./llm/models:/app/models
    networks:
      - agent-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: 120s

  # Text-to-Speech Service
  tts:
    build:
      context: ./tts
      dockerfile: Dockerfile
    container_name: agent-tts
    ports:
      - "${TTS_PORT:-8003}:8003"
    environment:
      - PYTHONPATH=/app
      - PIPER_MODEL=${PIPER_MODEL:-en_US-lessac-medium}
      - SARDAUKAR_TRANSLATOR_URL=${SARDAUKAR_TRANSLATOR_URL:-http://sardaukar-translator:8000}
    volumes:
      - ./tts:/app
      - ./tts/models:/app/models
    depends_on:
      - sardaukar-translator
    networks:
      - agent-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: ${HEALTH_CHECK_START_PERIOD:-40s}

  # Sardaukar Translator Service
  sardaukar-translator:
    build:
      context: ../sardaukar
      dockerfile: Dockerfile
    container_name: sardaukar-translator
    ports:
      - "${SARDAUKAR_PORT:-8004}:8000"
    environment:
      - PYTHONPATH=/app
    networks:
      - agent-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: ${HEALTH_CHECK_START_PERIOD:-40s}